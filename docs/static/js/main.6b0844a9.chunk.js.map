{"version":3,"sources":["index.js"],"names":["Square","props","state","x","y","isHead","className","this","React","Component","Board","handleKeyPress","e","key","setState","direction","document","getElementById","innerHTML","interval","setInterval","tick","onkeydown","grid","boardWidth","boardHeight","xHead","yHead","initBoard","setScore","moveHead","score","Number","toString","console","log","renderHead","newSquare","renderSquare","updatedGrid","rowElement","cloneElement","Math","random","children","splice","i","push","renderSquares","width","heightIndex","squares","Game","id","ReactDOM","render"],"mappings":"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","file":"static/js/main.6b0844a9.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\nclass Square extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            x: props.x,\r\n            y: props.y,\r\n            isHead: props.isHead,\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={this.state.isHead ? 'headSquare' : 'square'}></div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nclass Board extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.interval = setInterval(() => this.tick(), 1000);\r\n        document.onkeydown = this.handleKeyPress;\r\n        this.state = {\r\n            grid: [],\r\n            boardWidth: 50,\r\n            boardHeight: 50,\r\n            xHead: 2,\r\n            yHead: 2,\r\n            direction: 'R',\r\n        };\r\n        this.initBoard();\r\n    }\r\n\r\n    tick() {\r\n        this.setScore();\r\n        this.moveHead();\r\n    }\r\n\r\n    setScore() {\r\n        let score = Number(document.getElementById(\"score\").innerHTML);\r\n        score++\r\n        document.getElementById(\"score\").innerHTML = score.toString();\r\n    }\r\n\r\n    moveHead() {\r\n        if (this.state.direction === 'R') {\r\n            this.setState({xHead: this.state.xHead + 1})\r\n        }\r\n        else if (this.state.direction === 'D') {\r\n            this.setState({yHead: this.state.yHead + 1})\r\n        }\r\n        else if (this.state.direction === 'L') {\r\n            this.setState({xHead: this.state.xHead - 1})\r\n        }\r\n        else if (this.state.direction === 'U') {\r\n            this.setState({yHead: this.state.yHead - 1})\r\n        }\r\n        console.log(this.state);\r\n\r\n        this.renderHead()\r\n    }\r\n\r\n    renderHead() {\r\n        var newSquare = this.renderSquare(this.state.xHead, this.state.yHead, true);\r\n\r\n        var updatedGrid = this.state.grid;\r\n        var rowElement = React.cloneElement(updatedGrid[this.state.yHead], { key: Math.random() });\r\n        rowElement.props.children.splice(this.state.xHead, 1, newSquare);\r\n        updatedGrid.splice(this.state.yHead, 1, rowElement);\r\n        \r\n        this.setState({grid: updatedGrid})\r\n    }\r\n\r\n    handleKeyPress = (e) => {\r\n        if (e.key === 'ArrowUp') {\r\n            this.setState({direction:'U'})\r\n        }\r\n        else if (e.key === 'ArrowDown') {\r\n            this.setState({direction:'D'})\r\n        }\r\n        else if (e.key === 'ArrowLeft') {\r\n            this.setState({direction:'L'})\r\n        }\r\n        else if (e.key === 'ArrowRight') {\r\n            this.setState({direction:'R'})\r\n        }\r\n\r\n        document.getElementById(\"direction\").innerHTML = this.state.direction;\r\n    }\r\n\r\n    initBoard() {\r\n        //Create the grid of the chosen size\r\n        for (let i = 0; i < this.state.boardHeight; i++) {\r\n            this.state.grid.push(<div className=\"board-row\" key={Math.random()}>\r\n                {this.renderSquares(this.state.boardWidth, i)}\r\n            </div>)\r\n        }\r\n\r\n        return this.state.grid;\r\n    }\r\n\r\n    renderSquares(width, heightIndex) {\r\n        const squares = [];\r\n        for (let i = 0; i < width; i++) {\r\n            squares.push(this.renderSquare(i, heightIndex, false));\r\n        }\r\n        return squares;\r\n    }\r\n\r\n    renderSquare(x, y, isHead) {\r\n        return <Square x={x} y={y} isHead={isHead} key={Math.random()}></Square>;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.state.grid}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass Game extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"game\">\r\n                <div className=\"game-board\">\r\n                    <Board />\r\n                </div>\r\n                <div className=\"game-details\">\r\n                    <p className=\"game-details\">direction:&nbsp;</p>\r\n                    <p className=\"game-details\" id=\"direction\"></p>\r\n                    <p className=\"game-details\">&nbsp;score:&nbsp;</p>\r\n                    <p className=\"game-details\" id=\"score\"></p>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nReactDOM.render(\r\n    <Game />,\r\n    document.getElementById('root')\r\n);"],"sourceRoot":""}